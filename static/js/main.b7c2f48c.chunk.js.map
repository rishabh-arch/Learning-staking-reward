{"version":3,"sources":["utils/AddToken.js","components/Widgets/Navbar.js","components/Airdrop.js","components/Main.js","utils/ToWeiConvert.js","components/Error.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","address","symbol","decimals","window","ethereum","request","method","params","type","options","image","then","success","Error","console","log","catch","error","Navbar","_ref","state","react_default","a","createElement","className","href","aria-hidden","account","Airdrop","Main","rewardTokenAddress","stakeToken","unstakeToken","StakingTokenAddress","_useState","useState","_useState2","Object","slicedToArray","stake","setStake","id","style","backgroundColor","borderColor","onClick","AddToken","tetherName","scope","web3","utils","fromWei","stakingBalance","rwdBalance","htmlFor","concat","tetherBalance","onChange","e","target","value","placeholder","ToWeiConvert","number","toWei","toString","class","App","ErrorComes","loading","setLoading","_useState3","_useState4","_useState5","_useState6","setState","state2","tether","rwd","decentralBank","tetherAddress","rwdAddress","useEffect","flag","Web3","enable","givenProvider","alert","eth","getAccounts","asyncToGenerator","regenerator_default","mark","_callee6","accounts","networkId","tetherData","rwdData","decentralBankData","wrap","_context6","prev","next","net","getId","sent","Tether","networks","RWD","DecentralBank","Contract","abi","methods","balanceOf","call","_ref2","_callee","res","_context","abrupt","stop","_x2","apply","this","arguments","_callee2","_context2","_callee5","_context5","_ref5","_callee3","_context3","_x3","StakingBalances","_ref6","_callee4","_context4","_x4","err","finally","objectSpread","_x","_ref7","_callee7","amount","_context7","approve","_address","send","from","on","hash","depositTokens","_x5","_ref8","_callee8","_context8","unstakeTokens","Fragment","lib","size","color","components_Error","Widgets_Navbar","role","components_Main","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kovjBAAAA,EAAOC,QAAU,SAAkBC,EAASC,EAAQC,GAEpDC,OAAOC,SAASC,QAAQ,CACpBC,OAAQ,oBACRC,OAAQ,CACNC,KAAM,QACNC,QAAS,CACPT,QAASA,EACTC,OAAQA,EACRC,SAAUA,EACVQ,MAAO,+HAGVC,KAAK,SAACC,GACP,IAAIA,EAGF,MAAM,IAAIC,MAAM,yBAFhBC,QAAQC,IAAI,uCAKfC,MAAMF,QAAQG,soBCEFC,MAnBf,SAAAC,GAAyB,IAARC,EAAQD,EAARC,MAEf,OACEC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAjC,mBAIEJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4CAA4CE,cAAY,QAArE,cAEcN,EAAMO,iEC8CjBC,sBC4BAC,MAtFf,SAAAV,GAAsF,IAAvEC,EAAuED,EAAvEC,MAAMU,EAAiEX,EAAjEW,mBAAmBC,EAA8CZ,EAA9CY,WAAWC,EAAmCb,EAAnCa,aAAaC,EAAsBd,EAAtBc,oBAAsBC,EAI1DC,mBAAS,GAJiDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAI7EK,EAJ6EH,EAAA,GAItEI,EAJsEJ,EAAA,GAUpF,OACEf,EAAAC,EAAAC,cAAA,OAAKkB,GAAG,UAAUjB,UAAU,QAE1BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOkB,MAAO,CAACC,gBAAgB,YAAYC,YAAY,aAEpEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,MAAIkB,GAAG,cAAcjB,UAAU,4BAA4BqB,QAAS,kBAAIC,IAASb,EAAoBb,EAAM2B,WAAW,MAAM3B,EAAM2B,WAAlI,MAAiJd,GACjJZ,EAAAC,EAAAC,cAAA,MAAIkB,GAAG,cAAcjB,UAAU,4BAA4BqB,QAAS,kBAAIC,IAAShB,EAAmB,MAAM,MAA1G,SAAsHA,KAG1HT,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBACfH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIyB,MAAM,OAAV,mBACA3B,EAAAC,EAAAC,cAAA,MAAIyB,MAAM,OAAV,oBAGJ3B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKpB,OAAO8C,KAAKC,MAAMC,QAAQ/B,EAAMgC,eAAe,SAApD,IAA+DhC,EAAM2B,YACrE1B,EAAAC,EAAAC,cAAA,UAAKpB,OAAO8C,KAAKC,MAAMC,QAAQ/B,EAAMiC,WAAW,SAAhD,WAMNhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAO+B,QAAQ,SAAf,oBAAyCnD,OAAO8C,KAAKC,MAAMC,QAAlB,GAAAI,OAA6BnC,EAAMoC,eAAgB,SAA5F,IAAuGpC,EAAM2B,WAA7G,KAEA1B,EAAAC,EAAAC,cAAA,SACEf,KAAK,SACLiD,SAAU,SAACC,GAAOlB,EAASkB,EAAEC,OAAOC,OAAO9C,QAAQC,IAAI2C,EAAEC,OAAOC,QAChEpC,UAAU,eACViB,GAAG,QACHoB,YAAY,QAKlBxC,EAAAC,EAAAC,cAAA,UAAQf,KAAK,SAASqC,QAAS,WAAKd,EAAWQ,IAAUf,UAAU,uBAAnE,WACAH,EAAAC,EAAAC,cAAA,UAAQf,KAAK,SAASqC,QAAS,kBAAIb,KAAgBR,UAAU,uBAA7D,eCzDOsC,EAAA,SAACC,GACZ,OAAO5D,OAAO8C,KAAKC,MAAMc,MAAMD,EAAOE,WAAY,UCcvCpD,MAbf,WACE,OACEQ,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,OAAK2C,MAAM,8BACT7C,EAAAC,EAAAC,cAAA,OAAK2C,MAAM,aACT7C,EAAAC,EAAAC,cAAA,MAAI2C,MAAM,cAAV,SACA7C,EAAAC,EAAAC,cAAA,KAAG2C,MAAM,aAAT,YC+JWC,MA3Jf,WACE,IAAIC,GAAa,EADJlC,EAGiBC,oBAAS,GAH1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGNmC,EAHMjC,EAAA,GAGGkC,EAHHlC,EAAA,GAAAmC,EAIuBpC,oBAAS,GAJhCqC,EAAAnC,OAAAC,EAAA,EAAAD,CAAAkC,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAKarC,mBAAS,KALtBuC,EAAArC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAKNrD,EALMsD,EAAA,GAKCC,EALDD,EAAA,GAMPE,EAAS,CACbjD,QAAS,MACTkD,OAAQ,GACRC,IAAK,GACLC,cAAe,GACfvB,cAAe,EACfH,WAAY,EACZD,eAAgB,EAChBL,WAAY,GACZiC,cAAe,GACfC,WAAY,IAEdC,oBAAU,WACR,IAAIC,EAAO,EACX,IACMhF,OAAOC,UACTD,OAAO8C,KAAO,IAAImC,IAAKjF,OAAOC,UAC9BD,OAAOC,SAASiF,SAChBF,EAAO,GACEhF,OAAO8C,KAChB9C,OAAO8C,KAAO,IAAImC,IAAKA,IAAKE,eAAiB,yBAE7CnF,OAAOoF,MAAM,2BAGf,IAAMtC,EAAO9C,OAAO8C,KACP,IAATkC,GACFlC,EAAKuC,IAAIC,cAAc9E,KAAvB,eAAAQ,EAAAkB,OAAAqD,EAAA,EAAArD,CAAAsD,EAAArE,EAAAsE,KAA4B,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAArB,EAAAC,EAAAC,EAAA,OAAAY,EAAArE,EAAA6E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEFrD,EAAKuC,IAAIe,IAAIC,QAFX,UAEpBT,EAFoBK,EAAAK,KAKpBT,EAAaU,EAAOC,SAASZ,GAC7BE,EAAUW,EAAID,SAASZ,GACvBG,EAAoBW,EAAcF,SAASZ,KAE7CC,GAAcC,GAAWC,GATH,CAAAE,EAAAE,KAAA,gBAUxB1B,EAAOI,cAAgBgB,EAAWhG,QAClC4E,EAAOK,WAAagB,EAAQjG,QACtB6E,EAAS,IAAI5B,EAAKuC,IAAIsB,SAASJ,EAAOK,IAAKf,EAAWhG,SAEtD8E,EAAM,IAAI7B,EAAKuC,IAAIsB,SAASF,EAAIG,IAAKd,EAAQjG,SAE7C+E,EAAgB,IAAI9B,EAAKuC,IAAIsB,SACjCD,EAAcE,IACdb,EAAkBlG,SAEpB4E,EAAOjD,QAAUmE,EAAS,GApBFM,EAAAE,KAAA,GAqBlBzB,EAAOmC,QACVC,UAAUnB,EAAS,IACnBoB,OACAvG,KAHG,eAAAwG,EAAA9E,OAAAqD,EAAA,EAAArD,CAAAsD,EAAArE,EAAAsE,KAGE,SAAAwB,EAAOC,GAAP,OAAA1B,EAAArE,EAAA6E,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAC,OAAA,SAAgB3C,EAAOpB,cAAgB6D,GAAvC,wBAAAC,EAAAE,SAAAJ,MAHF,gBAAAK,GAAA,OAAAN,EAAAO,MAAAC,KAAAC,YAAA,IAIHjH,KAJG0B,OAAAqD,EAAA,EAAArD,CAAAsD,EAAArE,EAAAsE,KAIE,SAAAiC,IAAA,OAAAlC,EAAArE,EAAA6E,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EACEzB,EAAOmC,QACV/G,SACAiH,OACAvG,KAAK,SAAC0G,GAAD,OAAUzC,EAAO7B,WAAasE,IAJlC,wBAAAS,EAAAN,SAAAK,OAMLlH,KAVG0B,OAAAqD,EAAA,EAAArD,CAAAsD,EAAArE,EAAAsE,KAUE,SAAAmC,IAAA,OAAApC,EAAArE,EAAA6E,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACExB,EAAIkC,QACPC,UAAUnB,EAAS,IACnBoB,OACAvG,KAHG,eAAAsH,EAAA5F,OAAAqD,EAAA,EAAArD,CAAAsD,EAAArE,EAAAsE,KAGE,SAAAsC,EAAOb,GAAP,OAAA1B,EAAArE,EAAA6E,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAAZ,OAAA,SAAgB3C,EAAOvB,WAAagE,GAApC,wBAAAc,EAAAX,SAAAU,MAHF,gBAAAE,GAAA,OAAAH,EAAAP,MAAAC,KAAAC,YAAA,IADF,cAAAI,EAAA1B,KAAA,EAKEvB,EAAciC,QACjBqB,gBAAgBvC,EAAS,IACzBoB,OACAvG,KAHG,eAAA2H,EAAAjG,OAAAqD,EAAA,EAAArD,CAAAsD,EAAArE,EAAAsE,KAGE,SAAA2C,EAAOlB,GAAP,OAAA1B,EAAArE,EAAA6E,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAjB,OAAA,SAAgB3C,EAAOxB,eAAiBiE,GAAxC,wBAAAmB,EAAAhB,SAAAe,MAHF,gBAAAE,GAAA,OAAAH,EAAAZ,MAAAC,KAAAC,YAAA,IALF,wBAAAI,EAAAR,SAAAO,OAUL/G,MAAM,SAAC0H,GAAD,OAAS5H,QAAQC,IAAI2H,KAC3BC,QAAQ,WACP/D,EAAOC,OAASA,EAChBD,EAAOE,IAAMA,EACbF,EAAOG,cAAgBA,EACvBJ,EAAStC,OAAAuG,EAAA,EAAAvG,CAAA,GAAKjB,EAAUwD,IACxBN,GAAW,KA/CS,QAAA8B,EAAAE,KAAA,iBAkDxBf,MAAM,wDACZnB,GAAa,EAnDiB,yBAAAgC,EAAAoB,SAAA3B,MAA5B,gBAAAgD,GAAA,OAAA1H,EAAAuG,MAAAC,KAAAC,YAAA,IA0DF,MAAOc,GACPtE,GAAa,IAEd,IAQH,IAAMrC,EAAU,eAAA+G,EAAAzG,OAAAqD,EAAA,EAAArD,CAAAsD,EAAArE,EAAAsE,KAAG,SAAAmD,EAAOC,GAAP,OAAArD,EAAArE,EAAA6E,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OACjBhC,GAAW,GACXlD,EAAMyD,OAAOmC,QACVkC,QAAQ9H,EAAM2D,cAAcoE,SAAUrF,EAAakF,IACnDI,KAAK,CAAEC,KAAMjI,EAAMO,UACnB2H,GAAG,kBAAmB,SAACC,GACtBnI,EAAM2D,cAAciC,QACjBwC,cAAc1F,EAAakF,IAC3BI,KAAK,CAAEC,KAAMjI,EAAMO,UACnB2H,GAAG,kBAAmB,SAACC,GACtBjF,GAAW,OAVF,wBAAA2E,EAAAzB,SAAAuB,MAAH,gBAAAU,GAAA,OAAAX,EAAApB,MAAAC,KAAAC,YAAA,GAcV5F,EAAY,eAAA0H,EAAArH,OAAAqD,EAAA,EAAArD,CAAAsD,EAAArE,EAAAsE,KAAG,SAAA+D,IAAA,OAAAhE,EAAArE,EAAA6E,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,OACnBhC,GAAW,GACXlD,EAAM2D,cAAciC,QACjB6C,gBACAT,KAAK,CAAEC,KAAMjI,EAAMO,UACnB2H,GAAG,kBAAmB,SAACC,GACtBjF,GAAW,KANI,wBAAAsF,EAAApC,SAAAmC,MAAH,yBAAAD,EAAAhC,MAAAC,KAAAC,YAAA,GASlB,OACEvG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwI,SAAA,KACGzF,EACChD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACwI,EAAA,YAAD,CAAaC,KAAM,GAAIC,MAAM,UAAU5F,QAASjD,EAAMiD,WAEtDD,EACF/C,EAAAC,EAAAC,cAAC2I,EAAD,MAEA7I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4I,EAAD,CAAQ/I,MAAOA,IACfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAM6I,KAAK,OAAO5I,UAAU,uCAC1BH,EAAAC,EAAAC,cAAC8I,EAAD,CACEjJ,MAAOA,EACPY,aAAcA,EACdD,WAAYA,EACZE,oBAAqBb,EAAM4D,cAC3BlD,mBAAoBV,EAAM6D,mBChJxBqF,QACW,cAA7BnK,OAAOoK,SAASC,UAEe,UAA7BrK,OAAOoK,SAASC,UAEhBrK,OAAOoK,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOtJ,EAAAC,EAAAC,cAACqJ,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtK,KAAK,SAAAuK,GACjCA,EAAaC","file":"static/js/main.b7c2f48c.chunk.js","sourcesContent":["module.exports = function AddToken(address, symbol, decimals) {\r\n\r\nwindow.ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: address,\r\n        symbol: symbol,\r\n        decimals: decimals,\r\n        image: 'https://cdn-icons.flaticon.com/png/512/464/premium/464746.png?token=exp=1650131952~hmac=ee4ed50377e3e6ff90d88af367103842',\r\n      },\r\n    },\r\n  }).then((success) => {\r\n    if (success) {\r\n      console.log('FOO successfully added to wallet!')\r\n    } else {\r\n      throw new Error('Something went wrong.')\r\n    }\r\n  })\r\n  .catch(console.error)\r\n}","\r\nimport React from \"react\";\r\n\r\nfunction Navbar({state}) {\r\n  \r\n  return (\r\n    <div>\r\n      {/* {console.log(props.state)} */}\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            Stake n Reward\r\n          </a>\r\n        </div>\r\n            <i className=\"fa fa-align-right text-white d-flex w-100\" aria-hidden=\"true\">\r\n              \r\n              Account No.{state.account}</i>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Airdrop() {\r\n  //Airdrop to have a timer that counts down\r\n  //initialize the countdown after our customers have staked a certain amount of tokens\r\n  //timer functionality,countdown,startTimer,state - for time to work..\r\n  const [state, setState] = useState({ time: {}, seconds: 20 });\r\n  let timer=0;\r\n\r\n  const startTimer = () => {\r\n    timer = setInterval(() => {\r\n      setState({\r\n        time: {\r\n          ...state.time,\r\n          seconds: state.seconds - 1,\r\n        },\r\n      });\r\n    }, 1000);\r\n  };\r\n  \r\n  const countDown = () => {\r\n    setState({\r\n      time: {\r\n        ...state.time,\r\n        seconds: state.seconds - 1,\r\n      },\r\n    });\r\n\r\n  };\r\n  // this.startTimer = startTimer.bind(this);\r\n  // this.countDown = this.countDown.bind(this);\r\n  \r\n  const secondsToTime = (secs) => {\r\n    let hours = Math.floor(secs / (60 * 60));\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n    let obj = {\r\n      h: hours,\r\n      m: minutes,\r\n      s: seconds,\r\n    };\r\n    return obj;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timeLeftVar = secondsToTime(state.seconds);\r\n    setState({ ...state, time: timeLeftVar });\r\n  }, [state.seconds]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card text-center\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">AIRDROP -{state.time.m}:{state.time.s} </h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Airdrop;\r\n","import React,{useEffect, useState} from \"react\";\r\nimport Airdrop from \"./Airdrop\";\r\nimport AddToken from \"../utils/AddToken\";\r\n\r\nfunction Main({state,rewardTokenAddress,stakeToken,unstakeToken,StakingTokenAddress}) {\r\n\r\n  // const TetherName = ()=>  ;\r\n\r\n  const [stake, setStake] = useState(0);\r\n  // const [tetherName, setTetherName] = useState(\"\");\r\n  // useEffect(() => {\r\n  //   setTetherName(async()=>await state.tether.methods.symbol().call().then(res=>res));\r\n  // }, [state.tether]);\r\n\r\n  return (\r\n    <div id=\"content\" className=\"mt-3\">\r\n      {/* create a table and body */}\r\n      <div className=\"card\" style={{backgroundColor:\"cadetblue\",borderColor:\"darkblue\"}}>\r\n        \r\n        <div className=\"card-body\">\r\n          <h2>Click to add tokens in Your Wallet</h2>\r\n          <h4 id=\"Token-link1\" className=\"cursor-pointer card-title\" onClick={()=>AddToken(StakingTokenAddress,state.tetherName,18)}>{state.tetherName} - {StakingTokenAddress}</h4>\r\n          <h4 id=\"Token-link2\" className=\"cursor-pointer card-title\" onClick={()=>AddToken(rewardTokenAddress,\"RWD\",18)}>RWD - {rewardTokenAddress}</h4>\r\n        </div>\r\n      </div>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Staking Reward </th>\r\n            <th scope=\"col\">Reward Balance</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{window.web3.utils.fromWei(state.stakingBalance,\"Ether\")} {state.tetherName}</td>\r\n            <td>{window.web3.utils.fromWei(state.rwdBalance,\"Ether\")} RWD</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* stake tokens and balance label */}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"stake\">Stake (Balance - {window.web3.utils.fromWei(`${state.tetherBalance}`,\"Ether\")} {state.tetherName})</label>\r\n            \r\n            <input\r\n              type=\"number\" \r\n              onChange={(e) =>{ setStake(e.target.value);console.log(e.target.value)}}\r\n              className=\"form-control\"\r\n              id=\"stake\"\r\n              placeholder=\"0\"\r\n            />\r\n          </div>\r\n        </div>\r\n   \r\n        <button type=\"button\" onClick={()=>{stakeToken(stake);}} className=\"btn btn-primary m-2\">Deposit</button>\r\n        <button type=\"button\" onClick={()=>unstakeToken()} className=\"btn btn-primary m-2\">Withdraw</button>\r\n      </div>\r\n\r\n    {/* <Airdrop/> */}\r\n\r\n      {/* <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"form-group\">\r\n            <label for=\"\">DEPOSIT</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"\"\r\n              id=\"\"\r\n              aria-describedby=\"helpId\"\r\n              placeholder=\"\"\r\n            />\r\n            <label for=\"\">DEPOSIT</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"\"\r\n              id=\"\"\r\n              aria-describedby=\"helpId\"\r\n              placeholder=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","export default (number) => {\r\n    return window.web3.utils.toWei(number.toString(), \"ether\");\r\n  };","import React from 'react'\r\n\r\nfunction Error() {\r\n  return (\r\n    <div>\r\n<div class=\"card text-white bg-primary\">\r\n  <div class=\"card-body\">\r\n    <h4 class=\"card-title\">Title</h4>\r\n    <p class=\"card-text\">Text</p>\r\n  </div>\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error","import React, { useEffect, useState } from \"react\";\r\nimport { CubeSpinner } from \"react-spinners-kit\";\r\nimport Navbar from \"./Widgets/Navbar\";\r\n// import { render } from \"react-dom\";\r\nimport \"./App.css\";\r\nimport Web3 from \"web3\";\r\nimport Tether from \"../truffle_abis/Tether.json\";\r\nimport RWD from \"../truffle_abis/RWD.json\";\r\nimport DecentralBank from \"../truffle_abis/DecentralBank.json\";\r\nimport Main from \"./Main\";\r\nimport ToWeiConvert from \"../utils/ToWeiConvert\";\r\nimport Error from \"./Error\";\r\nfunction App() {\r\n  let ErrorComes = false;\r\n  // const [account, setAccount] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadWallet, setLoadWallet] = useState(false);\r\n  const [state, setState] = useState({});\r\n  const state2 = {\r\n    account: \"0x0\",\r\n    tether: {},\r\n    rwd: {},\r\n    decentralBank: {},\r\n    tetherBalance: 0,\r\n    rwdBalance: 0,\r\n    stakingBalance: 0,\r\n    tetherName: \"\",\r\n    tetherAddress: \"\",\r\n    rwdAddress: \"\",\r\n  };\r\n  useEffect(() => {\r\n    let flag = 0;\r\n    try {\r\n      if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        window.ethereum.enable();\r\n        flag = 1;\r\n      } else if (window.web3) {\r\n        window.web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n      } else {\r\n        window.alert(\"Please install MetaMask\");\r\n      }\r\n\r\n      const web3 = window.web3;\r\n      if (flag === 1) {\r\n        web3.eth.getAccounts().then(async (accounts) => {\r\n\r\n          const networkId = await web3.eth.net.getId();\r\n\r\n          //load Tether contract\r\n          const tetherData = Tether.networks[networkId];\r\n          const rwdData = RWD.networks[networkId];\r\n          const decentralBankData = DecentralBank.networks[networkId];\r\n          \r\n          if (tetherData && rwdData && decentralBankData) {\r\n            state2.tetherAddress = tetherData.address;\r\n            state2.rwdAddress = rwdData.address;\r\n            const tether = new web3.eth.Contract(Tether.abi, tetherData.address);\r\n  \r\n            const rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\r\n  \r\n            const decentralBank = new web3.eth.Contract(\r\n              DecentralBank.abi,\r\n              decentralBankData.address\r\n            );\r\n            state2.account = accounts[0];\r\n            await tether.methods\r\n              .balanceOf(accounts[0])\r\n              .call()\r\n              .then(async (res) => (state2.tetherBalance = res))\r\n              .then(async () => {\r\n                await tether.methods\r\n                  .symbol()\r\n                  .call()\r\n                  .then((res) => (state2.tetherName = res));\r\n              }) //state2.tetherBalance = res\r\n              .then(async () => {\r\n                await rwd.methods\r\n                  .balanceOf(accounts[0])\r\n                  .call()\r\n                  .then(async (res) => (state2.rwdBalance = res)); //state2.rwdBalance = res\r\n                await decentralBank.methods\r\n                  .StakingBalances(accounts[0])\r\n                  .call()\r\n                  .then(async (res) => (state2.stakingBalance = res)); //state2.stakingBalance = res\r\n              })\r\n              .catch((err) => console.log(err))\r\n              .finally(() => {\r\n                state2.tether = tether;\r\n                state2.rwd = rwd;\r\n                state2.decentralBank = decentralBank; //state2.tether = tether, state2.rwd = rwd, state2.decentralBank = decentralBank\r\n                setState({ ...state, ...state2 });\r\n                setLoading(false); //state2.loading = false\r\n              });\r\n          } else {\r\n            alert(\"contract not found on this network ,Try Mumbai Matic\");\r\n      ErrorComes = true;\r\n\r\n          }\r\n          //load Reward contract\r\n          //load DecentralBank contract\r\n        });\r\n      }\r\n    } catch (err) {\r\n      ErrorComes = true;\r\n    }\r\n  }, []);\r\n  // two function one that stakes and one that unstakes -\r\n  // leverage our decentralBank contract - deposit tokens and unstaking\r\n  // ALL Of This is for the staking:\r\n  // depositTokens transferFrom\r\n  // function approve transaction hash\r\n  // STAKING FUNCTION ?? >> decentralBank.depositTokens (send transactionHash =>)\r\n\r\n  const stakeToken = async (amount) => {\r\n    setLoading(true);\r\n    state.tether.methods\r\n      .approve(state.decentralBank._address, ToWeiConvert(amount))\r\n      .send({ from: state.account })\r\n      .on(\"transactionHash\", (hash) => {\r\n        state.decentralBank.methods\r\n          .depositTokens(ToWeiConvert(amount))\r\n          .send({ from: state.account })\r\n          .on(\"transactionHash\", (hash) => {\r\n            setLoading(false);\r\n          });\r\n      });\r\n  };\r\n  const unstakeToken = async () => {\r\n    setLoading(true);\r\n    state.decentralBank.methods\r\n      .unstakeTokens()\r\n      .send({ from: state.account })\r\n      .on(\"transactionHash\", (hash) => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"LoadingClass\">\r\n          <CubeSpinner size={30} color=\"#686769\" loading={state.loading} />\r\n        </div>\r\n      ) : ErrorComes ? (\r\n        <Error />\r\n      ) : (\r\n        <div>\r\n          <Navbar state={state} />\r\n          <div className=\"container-fluid mt-5\">\r\n            <div className=\"row\">\r\n              <main role=\"main\" className=\"col-md-12 ml-sm-auto col-lg-12 px-4\">\r\n                <Main\r\n                  state={state}\r\n                  unstakeToken={unstakeToken}\r\n                  stakeToken={stakeToken}\r\n                  StakingTokenAddress={state.tetherAddress}\r\n                  rewardTokenAddress={state.rwdAddress}\r\n                />\r\n              </main>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n// import 'bootstrap/dist/js/bootstrap.js'\r\n// import 'bootstrap/dist/js/bootstrap.bundle.js'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}